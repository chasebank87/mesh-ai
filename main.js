/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var gt=Object.create;var Le=Object.defineProperty;var ht=Object.getOwnPropertyDescriptor;var mt=Object.getOwnPropertyNames;var ft=Object.getPrototypeOf,vt=Object.prototype.hasOwnProperty;var Lt=(p,t)=>()=>(t||p((t={exports:{}}).exports,t),t.exports),yt=(p,t)=>{for(var e in t)Le(p,e,{get:t[e],enumerable:!0})},Ye=(p,t,e,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of mt(t))!vt.call(p,r)&&r!==e&&Le(p,r,{get:()=>t[r],enumerable:!(s=ht(t,r))||s.enumerable});return p};var wt=(p,t,e)=>(e=p!=null?gt(ft(p)):{},Ye(t||!p||!p.__esModule?Le(e,"default",{value:p,enumerable:!0}):e,p)),Qt=p=>Ye(Le({},"__esModule",{value:!0}),p);var Je=Lt((ze,ye)=>{((p,t)=>{typeof define=="function"&&define.amd?define([],t):typeof ye=="object"&&ye.exports?ye.exports=t():p.fuzzysort=t()})(ze,p=>{"use strict";var t=(l,n)=>{if(!l||!n)return C;var c=B(l);te(n)||(n=S(n));var h=c.bitflags;return(h&n._bitflags)!==h?C:Y(c,n)},e=(l,n,c)=>{if(!l)return c!=null&&c.all?V(n,c):Oe;var h=B(l),m=h.bitflags,g=h.containsSpace,d=T((c==null?void 0:c.threshold)||0),v=(c==null?void 0:c.limit)||$e,f=0,y=0,w=n.length;function R(re){f<v?(fe.add(re),++f):(++y,re._score>fe.peek()._score&&fe.replaceTop(re))}if(c!=null&&c.key)for(var k=c.key,P=0;P<w;++P){var O=n[P],E=me(O,k);if(E&&(te(E)||(E=S(E)),(m&E._bitflags)===m)){var x=Y(h,E);x!==C&&(x._score<d||(x.obj=O,R(x)))}}else if(c!=null&&c.keys){var j=c.keys,q=j.length;e:for(var P=0;P<w;++P){var O=n[P];{for(var N=0,Q=0;Q<q;++Q){var k=j[Q],E=me(O,k);if(!E){Fe[Q]=ce;continue}te(E)||(E=S(E)),Fe[Q]=E,N|=E._bitflags}if((m&N)!==m)continue}if(g)for(let M=0;M<h.spaceSearches.length;M++)z[M]=U;for(var Q=0;Q<q;++Q){if(E=Fe[Q],E===ce){oe[Q]=ce;continue}if(oe[Q]=Y(h,E,!1,g),oe[Q]===C){oe[Q]=ce;continue}if(g)for(let A=0;A<h.spaceSearches.length;A++){if(ee[A]>-1e3&&z[A]>U){var H=(z[A]+ee[A])/4;H>z[A]&&(z[A]=H)}ee[A]>z[A]&&(z[A]=ee[A])}}if(g){for(let M=0;M<h.spaceSearches.length;M++)if(z[M]===U)continue e}else{var L=!1;for(let M=0;M<q;M++)if(oe[M]._score!==U){L=!0;break}if(!L)continue}var K=new a(q);for(let M=0;M<q;M++)K[M]=oe[M];if(g){var I=0;for(let M=0;M<h.spaceSearches.length;M++)I+=z[M]}else{var I=U;for(let A=0;A<q;A++){var x=K[A];if(x._score>-1e3&&I>U){var H=(I+x._score)/4;H>I&&(I=H)}x._score>I&&(I=x._score)}}if(K.obj=O,K._score=I,c!=null&&c.scoreFn){if(I=c.scoreFn(K),!I)continue;I=T(I),K._score=I}I<d||R(K)}}else for(var P=0;P<w;++P){var E=n[P];if(E&&(te(E)||(E=S(E)),(m&E._bitflags)===m)){var x=Y(h,E);x!==C&&(x._score<d||R(x))}}if(f===0)return Oe;for(var W=new Array(f),P=f-1;P>=0;--P)W[P]=fe.poll();return W.total=f+y,W},s=(l,n="<b>",c="</b>")=>{for(var h=typeof n=="function"?n:void 0,m=l.target,g=m.length,d=l.indexes,v="",f=0,y=0,w=!1,R=[],k=0;k<g;++k){var P=m[k];if(d[y]===k){if(++y,w||(w=!0,h?(R.push(v),v=""):v+=n),y===d.length){h?(v+=P,R.push(h(v,f++)),v="",R.push(m.substr(k+1))):v+=P+c+m.substr(k+1);break}}else w&&(w=!1,h?(R.push(h(v,f++)),v=""):v+=c);v+=P}return h?R:v},r=l=>{typeof l=="number"?l=""+l:typeof l!="string"&&(l="");var n=ue(l);return u(l,{_targetLower:n._lower,_targetLowerCodes:n.lowerCodes,_bitflags:n.bitflags})},i=()=>{ge.clear(),X.clear()};class o{get indexes(){return this._indexes.slice(0,this._indexes.len).sort((n,c)=>n-c)}set indexes(n){return this._indexes=n}highlight(n,c){return s(this,n,c)}get score(){return b(this._score)}set score(n){this._score=T(n)}}class a extends Array{get score(){return b(this._score)}set score(n){this._score=T(n)}}var u=(l,n)=>{var h,m,g,d,v,f,y;let c=new o;return c.target=l,c.obj=(h=n.obj)!=null?h:C,c._score=(m=n._score)!=null?m:U,c._indexes=(g=n._indexes)!=null?g:[],c._targetLower=(d=n._targetLower)!=null?d:"",c._targetLowerCodes=(v=n._targetLowerCodes)!=null?v:C,c._nextBeginningIndexes=(f=n._nextBeginningIndexes)!=null?f:C,c._bitflags=(y=n._bitflags)!=null?y:0,c},b=l=>l===U?0:l>1?l:Math.E**(((-l+1)**.04307-1)*-2),T=l=>l===0?U:l>1?l:1-Math.pow(Math.log(l)/-2+1,1/.04307),$=l=>{typeof l=="number"?l=""+l:typeof l!="string"&&(l=""),l=l.trim();var n=ue(l),c=[];if(n.containsSpace){var h=l.split(/\s+/);h=[...new Set(h)];for(var m=0;m<h.length;m++)if(h[m]!==""){var g=ue(h[m]);c.push({lowerCodes:g.lowerCodes,_lower:h[m].toLowerCase(),containsSpace:!1})}}return{lowerCodes:n.lowerCodes,_lower:n._lower,containsSpace:n.containsSpace,bitflags:n.bitflags,spaceSearches:c}},S=l=>{if(l.length>999)return r(l);var n=ge.get(l);return n!==void 0||(n=r(l),ge.set(l,n)),n},B=l=>{if(l.length>999)return $(l);var n=X.get(l);return n!==void 0||(n=$(l),X.set(l,n)),n},V=(l,n)=>{var c=[];c.total=l.length;var h=(n==null?void 0:n.limit)||$e;if(n!=null&&n.key)for(var m=0;m<l.length;m++){var g=l[m],d=me(g,n.key);if(d!=C){te(d)||(d=S(d));var v=u(d.target,{_score:d._score,obj:g});if(c.push(v),c.length>=h)return c}}else if(n!=null&&n.keys)for(var m=0;m<l.length;m++){for(var g=l[m],f=new a(n.keys.length),y=n.keys.length-1;y>=0;--y){var d=me(g,n.keys[y]);if(!d){f[y]=ce;continue}te(d)||(d=S(d)),d._score=U,d._indexes.len=0,f[y]=d}if(f.obj=g,f._score=U,c.push(f),c.length>=h)return c}else for(var m=0;m<l.length;m++){var d=l[m];if(d!=C&&(te(d)||(d=S(d)),d._score=U,d._indexes.len=0,c.push(d),c.length>=h))return c}return c},Y=(l,n,c=!1,h=!1)=>{if(c===!1&&l.containsSpace)return de(l,n,h);for(var m=l._lower,g=l.lowerCodes,d=g[0],v=n._targetLowerCodes,f=g.length,y=v.length,P=0,w=0,R=0;;){var k=d===v[w];if(k){if(D[R++]=w,++P,P===f)break;d=g[P]}if(++w,w>=y)return C}var P=0,O=!1,E=0,x=n._nextBeginningIndexes;x===C&&(x=n._nextBeginningIndexes=Ge(n.target)),w=D[0]===0?0:x[D[0]-1];var j=0;if(w!==y)for(;;)if(w>=y){if(P<=0||(++j,j>200))break;--P;var q=ie[--E];w=x[q]}else{var k=g[P]===v[w];if(k){if(ie[E++]=w,++P,P===f){O=!0;break}++w}else w=x[w]}var N=f<=1?-1:n._targetLower.indexOf(m,D[0]),Q=!!~N,H=Q?N===0||n._nextBeginningIndexes[N-1]===N:!1;if(Q&&!H){for(var L=0;L<x.length;L=x[L])if(!(L<=N)){for(var K=0;K<f&&g[K]===n._targetLowerCodes[L+K];K++);if(K===f){N=L,H=!0;break}}}var I=M=>{for(var A=0,Ve=0,J=1;J<f;++J)M[J]-M[J-1]!==1&&(A-=M[J],++Ve);var ut=M[f-1]-M[0]-(f-1);if(A-=(12+ut)*Ve,M[0]!==0&&(A-=M[0]*M[0]*.2),!O)A*=1e3;else{for(var Be=1,J=x[0];J<y;J=x[J])++Be;Be>24&&(A*=(Be-24)*10)}return A-=(y-f)/2,Q&&(A/=1+f*f*1),H&&(A/=1+f*f*1),A-=(y-f)/2,A};if(O)if(H){for(var L=0;L<f;++L)D[L]=N+L;var W=D,re=I(D)}else var W=ie,re=I(ie);else{if(Q)for(var L=0;L<f;++L)D[L]=N+L;var W=D,re=I(W)}n._score=re;for(var L=0;L<f;++L)n._indexes[L]=W[L];n._indexes.len=f;let ve=new o;return ve.target=n.target,ve._score=n._score,ve._indexes=n._indexes,ve},de=(l,n,c)=>{for(var h=new Set,m=0,g=C,d=0,v=l.spaceSearches,f=v.length,y=0,w=()=>{for(let H=y-1;H>=0;H--)n._nextBeginningIndexes[he[H*2+0]]=he[H*2+1]},R=!1,Q=0;Q<f;++Q){ee[Q]=U;var k=v[Q];if(g=Y(k,n),c){if(g===C)continue;R=!0}else if(g===C)return w(),C;var P=Q===f-1;if(!P){var O=g._indexes,E=!0;for(let L=0;L<O.len-1;L++)if(O[L+1]-O[L]!==1){E=!1;break}if(E){var x=O[O.len-1]+1,j=n._nextBeginningIndexes[x-1];for(let L=x-1;L>=0&&j===n._nextBeginningIndexes[L];L--)n._nextBeginningIndexes[L]=x,he[y*2+0]=L,he[y*2+1]=j,y++}}m+=g._score/f,ee[Q]=g._score/f,g._indexes[0]<d&&(m-=(d-g._indexes[0])*2),d=g._indexes[0];for(var q=0;q<g._indexes.len;++q)h.add(g._indexes[q])}if(c&&!R)return C;w();var N=Y(l,n,!0);if(N!==C&&N._score>m){if(c)for(var Q=0;Q<f;++Q)ee[Q]=N._score/f;return N}c&&(g=n),g._score=m;var Q=0;for(let H of h)g._indexes[Q++]=H;return g._indexes.len=Q,g},ue=l=>{for(var n=l.length,c=l.toLowerCase(),h=[],m=0,g=!1,d=0;d<n;++d){var v=h[d]=c.charCodeAt(d);if(v===32){g=!0;continue}var f=v>=97&&v<=122?v-97:v>=48&&v<=57?26:v<=127?30:31;m|=1<<f}return{lowerCodes:h,bitflags:m,containsSpace:g,_lower:c}},Ne=l=>{for(var n=l.length,c=[],h=0,m=!1,g=!1,d=0;d<n;++d){var v=l.charCodeAt(d),f=v>=65&&v<=90,y=f||v>=97&&v<=122||v>=48&&v<=57,w=f&&!m||!g||!y;m=f,g=y,w&&(c[h++]=d)}return c},Ge=l=>{for(var n=l.length,c=Ne(l),h=[],m=c[0],g=0,d=0;d<n;++d)m>d?h[d]=m:(m=c[++g],h[d]=m===void 0?n:m);return h},ge=new Map,X=new Map,D=[],ie=[],he=[],z=[],ee=[],Fe=[],oe=[],me=(l,n)=>{var c=l[n];if(c!==void 0)return c;if(typeof n=="function")return n(l);var h=n;Array.isArray(n)||(h=n.split("."));for(var m=h.length,g=-1;l&&++g<m;)l=l[h[g]];return l},te=l=>typeof l=="object"&&typeof l._bitflags=="number",$e=1/0,U=-$e,Oe=[];Oe.total=0;var C=null,ce=r(""),dt=l=>{var n=[],c=0,h={},m=g=>{for(var d=0,v=n[d],f=1;f<c;){var y=f+1;d=f,y<c&&n[y]._score<n[f]._score&&(d=y),n[d-1>>1]=n[d],f=1+(d<<1)}for(var w=d-1>>1;d>0&&v._score<n[w]._score;w=(d=w)-1>>1)n[d]=n[w];n[d]=v};return h.add=g=>{var d=c;n[c++]=g;for(var v=d-1>>1;d>0&&g._score<n[v]._score;v=(d=v)-1>>1)n[d]=n[v];n[d]=g},h.poll=g=>{if(c!==0){var d=n[0];return n[0]=n[--c],m(),d}},h.peek=g=>{if(c!==0)return n[0]},h.replaceTop=g=>{n[0]=g,m()},h},fe=dt();return{single:t,go:e,prepare:r,cleanup:i}})});var Et={};yt(Et,{default:()=>ke});module.exports=Qt(Et);var _=require("obsidian");var ne=require("obsidian");var we=require("obsidian"),je=wt(Je());async function Re(p,t){console.log(`Searching for pattern: ${t}`);async function e(r){let i=p.app.vault.getAbstractFileByPath(r);if(i instanceof we.TFolder){console.log(`Searching in folder: ${r}`);let o=i.children.filter(u=>u instanceof we.TFile);console.log(`Files in folder: ${o.map(u=>u.name).join(", ")}`);let a=o.find(u=>u.name===t);if(a||(a=o.find(u=>u.name===`${t}.md`)),a||(a=o.find(u=>u.name.toLowerCase()===t.toLowerCase())),a)return console.log(`Pattern found: ${a.path}`),a}else console.log(`Folder not found: ${r}`);return null}let s=await e(p.settings.customPatternsFolder);if(s||(s=await e(p.settings.fabricPatternsFolder)),s)return await p.app.vault.read(s);throw console.log(`Pattern '${t}' not found in custom or fabric patterns folders`),new Error(`Pattern '${t}' not found in custom or fabric patterns folders`)}async function bt(p,t,e=10){let s=[...await p.loadCustomPatterns(),...await p.loadFabricPatterns()];return je.go(t,s,{limit:e})}async function We(p,t,e,s){if(e.empty(),t.length===0){e.style.display="none";return}let r=await bt(p,t);r.length>0?(r.forEach(i=>{e.createEl("div",{text:i.target,cls:"pattern-result"}).addEventListener("click",()=>s(i.target))}),e.style.display="block"):e.style.display="none"}function Xe(p,t,e,s,r){t.includes(p)||(t.push(p),e()),s(),r()}function Ze(p,t,e){p.empty(),t.forEach(s=>{let r=Pt(s,i=>{let o=t.filter(a=>a!==i);e(o),Ze(p,o,e)});p.appendChild(r)}),e(t)}function Pt(p,t){let e=document.createElement("div");return e.textContent=p,e.className="selected-pattern",e.createEl("span",{text:"\xD7",cls:"remove-pattern"}).addEventListener("click",()=>t(p)),e}var Qe=require("obsidian");async function et(p){let t=p.workspace.getActiveFile();if(t instanceof Qe.TFile)return await p.vault.read(t);throw new Error("No active note found")}async function De(p,t,e){let s=p.settings.meshOutputFolder;if(!s)throw new Error("Mesh output folder not set");let r=e.value.trim()||"Mesh Note",i=`${r}.md`,o=1;for(;await p.app.vault.adapter.exists(`${s}/${i}`);)i=`${r} (${o}).md`,o++;let a=`${s}/${i}`;await p.app.vault.create(a,t),new Qe.Notice(`File created: ${i}`);let u=p.app.vault.getAbstractFileByPath(a);await this.app.workspace.getLeaf(!1).openFile(u)}var pe=class{constructor(t){this.containerEl=t}static createSelect(t,e,s){let r=(t instanceof HTMLElement,t).createEl("select",{cls:e});return s.forEach(i=>{r.createEl("option",{value:i,text:i})}),r}createUI(t,e){this.containerEl.empty(),this.containerEl.addClass("mesh-ai-container");let s=this.containerEl.createEl("h2",{text:"Mesh AI"}),r=this.createProviderSelect(t),i=this.createPromptInput();this.createSubmitButton().addEventListener("click",()=>{let u=r.value,b=i.value;b&&e(u,b)});let a=this.containerEl.createEl("div",{cls:"mesh-ai-response"});return{updateResponse:u=>{a.innerHTML=`<pre>${u}</pre>`},showLoading:()=>{a.innerHTML='<div class="mesh-ai-loading">Processing...</div>'},hideLoading:()=>{a.innerHTML=""}}}createProviderSelect(t){let e=this.containerEl.createEl("div",{cls:"mesh-ai-select-container"});e.createEl("label",{text:"Select Provider:",attr:{for:"mesh-ai-provider"}});let s=e.createEl("select",{cls:"mesh-ai-select",attr:{id:"mesh-ai-provider"}});return[{value:"openai",label:"OpenAI"},{value:"google",label:"Google"},{value:"microsoft",label:"Microsoft"},{value:"anthropic",label:"Anthropic"},{value:"grocq",label:"Grocq"},{value:"ollama",label:"Ollama"}].forEach(i=>{let o=s.createEl("option",{value:i.value,text:i.label});this.isProviderConfigured(i.value,t)?o.disabled=!1:o.disabled=!0}),s}isProviderConfigured(t,e){return t==="ollama"?!!e.ollamaServerUrl:!!e[`${t}ApiKey`]}createPromptInput(){let t=this.containerEl.createEl("div",{cls:"mesh-ai-input-container"});return t.createEl("label",{text:"Enter your prompt:",attr:{for:"mesh-ai-prompt"}}),t.createEl("textarea",{cls:"mesh-ai-input",attr:{id:"mesh-ai-prompt",rows:"4"}})}createSubmitButton(){return this.containerEl.createEl("button",{cls:"mesh-ai-submit",text:"Submit"})}};var se=require("obsidian"),be=class extends se.Modal{constructor(e,s,r,i,o){super(e);this.youtubeLinks=r,this.onRun=i,this.onSkip=o,this.youtubeProvider=s.youtubeProvider}onOpen(){let{contentEl:e}=this;e.empty(),e.createEl("h2",{text:"YouTube Links Detected"});let s=e.createEl("select");this.youtubeLinks.forEach(r=>{let i=s.createEl("option",{text:r});i.value=r}),new se.Setting(e).addButton(r=>{r.setButtonText("Run").setCta().onClick(async()=>{let i=s.value;if(i)try{let o=await this.youtubeProvider.getTranscript(i);this.onRun(o),this.close()}catch(o){new se.Notice(`Failed to fetch YouTube transcript: ${o.message}`),this.onSkip(),this.close()}else new se.Notice("Please select a YouTube link")})}).addButton(r=>{r.setButtonText("Skip").onClick(()=>{this.onSkip(),this.close()})})}onClose(){let{contentEl:e}=this;e.empty()}};async function Ue(p,t,e){try{return await p.getProvider(t).generateResponse(e)}catch(s){throw console.error("LLM Request failed:",s),new Error(`LLM Request failed: ${s.message}`)}}var Ke=`
# You will be given prompt instructions that should not be included in your generation, just the content below the divider. The divider is a series of 10 asterisks (*) on a new line.

{patternContents}

You are now tasked with processing the data that follows, applying the guidelines and structure outlined in the previous prompt. Your primary goal is to enhance the rough notes into well-organized, detailed, and contextually rich documentation. Ensure that all data is accurately captured, formatted in markdown, and made easily retrievable for future reference.

Key Instructions:

Maintain Consistency: Keep the formatting consistent throughout the document, adhering to the markdown structure provided.
Contextual Clarity: Add or infer any missing details to enhance the clarity and context of the notes.
Summarization and Structuring: Make the notes concise but informative, ensuring that they are structured in a way that aids retrieval by a RAG system.
Task Identification: Pay special attention to tasks, ensuring they are clearly marked with appropriate statuses (incomplete, completed, in progress) and use the provided icons and formats to enhance readability.
Resource Linking: If any online resources are mentioned or inferred, link them appropriately using official URLs or PDFs.
Define Uncommon Terms: Identify and define any uncommon or significant terms, linking to relevant wiki pages where possible.
Data Availability: If no data follows this prompt, return an error indicating that no data was sent to process.
Proceed to process the data below according to these guidelines.

**********

{input}
`;async function tt(p,t,e,s){let r=/(?:https?:\/\/)?(?:www\.)?(?:youtube\.com|youtu\.be)\/(?:watch\?v=)?(?:embed\/)?(?:v\/)?(?:shorts\/)?(?:\S+)/g,i="";switch(e){case"active-note":case"clipboard":i=e==="active-note"?await et(p):await navigator.clipboard.readText();let o=Array.from(i.match(r)||[]);o&&o.length>0&&(i=await new Promise(a=>{new be(p,t,o,u=>{a(`YouTube Transcript:

${u}

Original Content:

${i}`)},()=>{a(i)}).open()}));break;case"tavily":G(t,"Searching Tavily for:",s.value),i=await t.tavilyProvider.search(s.value);break}if(!i)throw new Error("No input content available");return i}function G(p,...t){p.settings.enableDebugging&&console.log(...t)}async function rt(p,t,e,s){let r=s;for(let i of e){let o=await Re(p,i),a=Ke.replace("{patternContents}",o).replace("{input}",r);G(p,`Applying pattern: ${i}`),G(p,"Full prompt being sent to LLM:",a),r=await Ue(p,t,a)}return r}async function st(p,t,e,s){let r="";for(let i of e){let o=await Re(p,i),a=Ke.replace("{patternContents}",o).replace("{input}",s),u=await Ue(p,t,a);r+=`# ${i}

---

${u}


`}return r}var nt=`
  <svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev/svgjs" width="2000" height="543" viewBox="0 0 2000 543"><g transform="matrix(1,0,0,1,-0.28965095923535955,1.098527712736086)"><svg viewBox="0 0 342 93" data-background-color="#ffffff" preserveAspectRatio="xMidYMid meet" height="543" width="2000" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g id="tight-bounds" transform="matrix(1,0,0,1,0.049530314029254896,0.7790363909292353)"><svg viewBox="0 0 341.4206560639087 91.92077236413178" height="91.92077236413178" width="341.4206560639087"><g><svg viewBox="0 0 341.4206560639087 91.92077236413178" height="91.92077236413178" width="341.4206560639087"><g><svg viewBox="0 0 341.4206560639087 91.92077236413178" height="91.92077236413178" width="341.4206560639087"><g id="textblocktransform"><svg viewBox="0 0 341.4206560639087 91.92077236413178" height="91.92077236413178" width="341.4206560639087" id="textblock"><g><svg viewBox="0 0 341.4206560639087 57.6008" height="57.6008" width="341.4206560639087"><g><svg><g></g><g></g></svg></g><g><svg><g><svg></svg></g><g></g></svg></g><g id="text-0"><svg viewBox="0 0 341.4206560639087 57.6008" height="57.6008" width="341.4206560639087"><g transform="matrix(1,0,0,1,0,0)"><svg width="260.5789" viewBox="3.9 -35 161.04 35.6" height="57.6008" data-palette-color="#7a26c1"><g class="wordmark-text-0" data-fill-palette-color="primary"><path d="M33.55-24.95L33.55-24.95Q36.7-24.95 38.38-23.25 40.05-21.55 40.05-18.25L40.05-18.25 40.05 0 35.85 0 35.85-17.05Q35.8-19.3 34.95-20.33 34.1-21.35 32.05-21.35L32.05-21.35Q30.75-21.35 29.58-20.93 28.4-20.5 27-19.6 25.6-18.7 23.6-17.25L23.6-17.25 23.35-20.25Q26-22.6 28.5-23.78 31-24.95 33.55-24.95ZM3.9-24.35L7.4-24.35 7.7-19.7 8.15-18.95 8.15 0 3.9 0 3.9-24.35ZM17.6-24.95L17.6-24.95Q20.7-24.95 22.35-23.28 24-21.6 24.05-18.25L24.05-18.25 24.05 0 19.95 0 19.95-17.05Q19.95-19.4 19-20.38 18.05-21.35 16.15-21.35L16.15-21.35Q14.9-21.35 13.73-20.95 12.55-20.55 11.13-19.65 9.7-18.75 7.65-17.25L7.65-17.25 7.35-20.25Q10-22.6 12.5-23.78 15-24.95 17.6-24.95ZM57.7-24.95L57.7-24.95Q63.2-24.95 65.67-22.95 68.15-20.95 68.15-17L68.15-17Q68.2-13.75 66.8-11.93 65.4-10.1 62.35-10.1L62.35-10.1 48.15-10.1 48.15-13.4 61.25-13.4Q62.9-13.4 63.4-14.53 63.9-15.65 63.9-17L63.9-17Q63.85-19.35 62.5-20.35 61.15-21.35 57.9-21.35L57.9-21.35Q55.25-21.35 53.72-20.58 52.2-19.8 51.57-17.88 50.95-15.95 50.95-12.5L50.95-12.5Q50.95-8.6 51.72-6.55 52.5-4.5 54.2-3.75 55.9-3 58.7-3L58.7-3Q60.65-3 62.97-3.18 65.3-3.35 67.15-3.6L67.15-3.6 67.6-0.75Q66.45-0.3 64.77 0 63.1 0.3 61.32 0.45 59.55 0.6 58.15 0.6L58.15 0.6Q53.95 0.6 51.4-0.68 48.85-1.95 47.67-4.78 46.5-7.6 46.5-12.25L46.5-12.25Q46.5-17.05 47.67-19.83 48.85-22.6 51.32-23.78 53.8-24.95 57.7-24.95ZM82.65-24.95L82.65-24.95Q84.25-24.95 86.05-24.85 87.85-24.75 89.62-24.6 91.4-24.45 92.9-24.2L92.9-24.2 92.55-21.1Q90.25-21.2 87.92-21.28 85.6-21.35 83.3-21.35L83.3-21.35Q81.05-21.4 79.75-21.25 78.45-21.1 77.87-20.45 77.3-19.8 77.3-18.25L77.3-18.25Q77.3-16.35 78.2-15.75 79.1-15.15 80.85-14.75L80.85-14.75 87.95-13.15Q90.85-12.45 92.22-11 93.6-9.55 93.6-6.45L93.6-6.45Q93.6-3.45 92.47-1.95 91.35-0.45 89.05 0.05 86.75 0.55 83.2 0.55L83.2 0.55Q81.9 0.55 79.32 0.45 76.75 0.35 73.65-0.15L73.65-0.15 73.95-3.25Q75.15-3.2 76.5-3.13 77.85-3.05 79.32-3.05 80.8-3.05 82.35-3.05L82.35-3.05Q85.1-3.05 86.65-3.3 88.2-3.55 88.85-4.28 89.5-5 89.5-6.45L89.5-6.45Q89.5-8.25 88.45-8.85 87.4-9.45 85.65-9.85L85.65-9.85 78.65-11.45Q76.65-11.95 75.45-12.78 74.25-13.6 73.7-14.93 73.15-16.25 73.15-18.25L73.15-18.25Q73.15-21.1 74.15-22.55 75.15-24 77.25-24.5 79.35-25 82.65-24.95ZM114.74-24.95L114.74-24.95Q121.34-24.95 121.34-18.25L121.34-18.25 121.34 0 117.04 0 117.04-17.05Q117.04-19.5 116.27-20.43 115.49-21.35 113.59-21.35L113.59-21.35Q111.34-21.35 109.09-20.3 106.84-19.25 103.74-17.25L103.74-17.25 103.54-20.3Q106.39-22.45 109.19-23.7 111.99-24.95 114.74-24.95ZM99.94-35L104.19-35 104.24-25.35Q104.24-23.7 104.12-22.25 103.99-20.8 103.74-19.7L103.74-19.7 104.19-18.95 104.19 0 99.94 0 99.94-35ZM138.34-34.5L142.94-34.5Q143.54-34.5 143.99-34.18 144.44-33.85 144.59-33.3L144.59-33.3 155.69 0 151.14 0 142.19-28.3Q141.99-29 141.77-29.73 141.54-30.45 141.34-31.1L141.34-31.1 139.94-31.1Q139.74-30.45 139.54-29.73 139.34-29 139.09-28.3L139.09-28.3 130.14 0 125.59 0 136.69-33.3Q136.84-33.85 137.29-34.18 137.74-34.5 138.34-34.5L138.34-34.5ZM131.84-14.6L149.34-14.6 149.34-10.8 131.84-10.8 131.84-14.6ZM160.54-34.5L164.94-34.5 164.94 0 160.54 0 160.54-34.5Z" fill="#7a26c1" data-fill-palette-color="primary"></path></g></svg></g><g><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" x="274.1781" y="3.552713678800501e-15" viewBox="8.133 11.627 48.735 41.747" enable-background="new 7.5 7.5 50 50" xml:space="preserve" height="57.60079999999999" width="67.24255606390878" class="icon-dxe-0" data-fill-palette-color="accent" id="dxe-0"><path d="M56.868 16.713A3.12 3.12 0 0 0 53.75 13.594 3.116 3.116 0 0 0 50.684 16.193L37.335 15.613A3.115 3.115 0 0 0 34.265 12.976 3.12 3.12 0 0 0 31.205 15.521L23.283 14.309A3.11 3.11 0 0 0 20.208 11.627 3.12 3.12 0 0 0 17.09 14.745C17.09 15.556 17.408 16.288 17.918 16.844L10.782 36.131C10.765 36.176 10.764 36.221 10.761 36.267A3.12 3.12 0 0 0 8.133 39.338 3.115 3.115 0 0 0 11.087 42.439L23.95 49.985C24.106 51.559 25.423 52.798 27.038 52.798A3.12 3.12 0 0 0 30.104 50.198L44.45 50.74A3.116 3.116 0 0 0 47.52 53.374 3.12 3.12 0 0 0 50.637 50.257 3.115 3.115 0 0 0 48.02 47.189V32.083A3.115 3.115 0 0 0 50.637 29.016 3.11 3.11 0 0 0 48.48 26.064L54 19.807A3.11 3.11 0 0 0 56.868 16.713M33.601 19.139L30.538 28.554A3.1 3.1 0 0 0 27.827 31.317L14.26 38.563A3.12 3.12 0 0 0 11.797 36.272L18.748 17.483C19.186 17.718 19.679 17.864 20.209 17.864A3.12 3.12 0 0 0 23.27 15.319L31.192 16.531A3.11 3.11 0 0 0 33.601 19.139M27.037 46.561C25.597 46.561 24.394 47.547 24.037 48.876L12.572 42.15A3.11 3.11 0 0 0 14.336 39.655L27.903 32.408A3.11 3.11 0 0 0 30.71 34.731L46.377 47.359A3.12 3.12 0 0 0 44.451 49.738L30.105 49.196A3.11 3.11 0 0 0 27.037 46.561M32.054 34.528A3.11 3.11 0 0 0 33.991 32.041L44.463 29.629A3.12 3.12 0 0 0 47.02 32.083V46.592zM47.271 25.921A3.104 3.104 0 0 0 44.441 28.607L33.969 31.02A3.12 3.12 0 0 0 31.577 28.59L34.64 19.175A3.11 3.11 0 0 0 37.33 16.614L50.679 17.194A3.11 3.11 0 0 0 52.789 19.665z" fill="#6936f5" data-fill-palette-color="accent"></path></svg></g></svg></g></svg></g><g transform="matrix(1,0,0,1,0,71.1989664608)"><svg viewBox="0 0 341.4206560639087 20.721805903331788" height="20.721805903331788" width="341.4206560639087"><g transform="matrix(1,0,0,1,0,0)"><svg width="341.4206560639087" viewBox="2.29 -31.69 655.98 39.82" height="20.721805903331788" data-palette-color="#7a26c1"><path d="M5.44-2.25L5.44 7.91 2.29 7.91 2.29-23.75 5.44-23.75 5.44-21.53 6.13-21.53Q6.96-22.83 8.12-23.45 9.28-24.07 11.3-24.07L11.3-24.07Q14.09-24.07 15.42-22.86 16.75-21.66 16.82-18.82L16.82-18.82Q16.89-17.58 16.92-15.81 16.94-14.04 16.94-12.07 16.94-10.11 16.92-8.25 16.89-6.4 16.82-4.96L16.82-4.96Q16.75-2.15 15.36-0.93 13.96 0.29 11.18 0.29L11.18 0.29Q9.35 0.29 8.18-0.31 7.01-0.9 6.13-2.25L6.13-2.25 5.44-2.25ZM10.3-2.37L10.3-2.37Q13.6-2.37 13.7-4.69L13.7-4.69Q13.89-8.47 13.85-12.16 13.82-15.84 13.7-19.09L13.7-19.09Q13.65-20.31 12.92-20.86 12.18-21.41 10.45-21.41L10.45-21.41Q6.71-21.41 5.44-19.19L5.44-19.19 5.44-4.59Q6.1-3.39 7.24-2.88 8.37-2.37 10.3-2.37ZM26.66 0.27L26.66 0.27Q23.68 0.27 22.25-0.9 20.82-2.08 20.58-4.57L20.58-4.57Q20.55-5.05 20.52-5.54 20.48-6.03 20.53-6.49L20.53-6.49Q20.7-8.67 21.9-10.14 23.09-11.62 26.44-12.84L26.44-12.84Q27.81-13.33 29.32-13.72 30.83-14.11 32.32-14.48L32.32-14.48 32.32-18.99Q32.32-20.19 31.42-20.76 30.52-21.34 28.27-21.34L28.27-21.34Q26.32-21.34 25.3-20.85 24.29-20.36 24.19-19.07L24.19-19.07Q24.14-18.46 24.14-17.32 24.14-16.19 24.19-15.41L24.19-15.41 21.14-15.41Q21.09-16.02 21.04-16.99 20.99-17.97 21.07-18.73L21.07-18.73Q21.19-21.56 22.91-22.81 24.63-24.07 28.39-24.07L28.39-24.07Q32.32-24.07 33.85-22.71 35.37-21.34 35.4-18.21L35.4-18.21 35.4 0 32.32 0 32.32-2.25 31.64-2.25Q31.03-1.03 29.89-0.38 28.76 0.27 26.66 0.27ZM27.44-2.37L27.44-2.37Q30.95-2.37 32.3-4.47L32.3-4.47 32.3-11.87Q31.13-11.62 29.89-11.29 28.66-10.96 27-10.4L27-10.4Q25.02-9.67 24.36-8.72 23.7-7.76 23.61-6.49L23.61-6.49Q23.63-6.13 23.64-5.7 23.65-5.27 23.7-4.81L23.7-4.81Q23.87-3.64 24.88-3 25.88-2.37 27.44-2.37ZM47.38 0.29L47.38 0.29Q43.57 0.29 42.24-0.98 40.91-2.25 40.91-5.13L40.91-5.13 40.91-21.02 38.57-21.02 38.57-23.75 40.99-23.75 40.99-30.49 44.09-30.49 44.09-23.75 49.46-23.75 49.46-21.02 44.06-21.02 44.06-4.79Q44.06-3.44 44.62-2.93 45.19-2.42 47.46-2.42L47.46-2.42Q48.38-2.42 48.88-2.45 49.38-2.49 50.04-2.51L50.04-2.51 50.04 0.1Q49.46 0.2 48.77 0.24 48.09 0.29 47.38 0.29ZM60.08 0.29L60.08 0.29Q56.27 0.29 54.94-0.98 53.61-2.25 53.61-5.13L53.61-5.13 53.61-21.02 51.26-21.02 51.26-23.75 53.68-23.75 53.68-30.49 56.78-30.49 56.78-23.75 62.15-23.75 62.15-21.02 56.76-21.02 56.76-4.79Q56.76-3.44 57.32-2.93 57.88-2.42 60.15-2.42L60.15-2.42Q61.08-2.42 61.58-2.45 62.08-2.49 62.74-2.51L62.74-2.51 62.74 0.1Q62.15 0.2 61.47 0.24 60.78 0.29 60.08 0.29ZM72.62 0.29L72.62 0.29Q68.59 0.29 66.87-0.98 65.15-2.25 65.03-5.13L65.03-5.13Q64.93-6.93 64.89-9.38 64.86-11.82 64.89-14.28 64.93-16.75 65.03-18.58L65.03-18.58Q65.15-21.53 66.92-22.8 68.69-24.07 72.62-24.07L72.62-24.07Q76.33-24.07 77.99-22.83 79.65-21.58 79.82-18.73L79.82-18.73Q79.87-17.87 79.92-15.75 79.97-13.62 79.78-11.23L79.78-11.23 68.08-11.23Q68.08-9.69 68.11-8.11 68.13-6.52 68.2-4.81L68.2-4.81Q68.23-3.47 69.23-2.95 70.23-2.44 72.52-2.44L72.52-2.44Q74.79-2.44 75.72-2.95 76.65-3.47 76.75-4.81L76.75-4.81Q76.82-6.15 76.75-8.47L76.75-8.47 79.78-8.47Q79.9-7.76 79.89-6.82 79.87-5.88 79.82-5.13L79.82-5.13Q79.65-2.25 78.08-0.98 76.5 0.29 72.62 0.29ZM68.08-13.82L68.08-13.82 76.8-13.82Q76.85-15.48 76.85-16.99 76.85-18.51 76.75-19.07L76.75-19.07Q76.65-20.29 75.7-20.81 74.75-21.34 72.62-21.34L72.62-21.34Q70.25-21.34 69.24-20.81 68.23-20.29 68.2-19.07L68.2-19.07Q68.13-17.65 68.09-16.36 68.06-15.06 68.08-13.82ZM87.15-19.19L87.15 0 84 0 84-23.75 87.15-23.75 87.15-21.53 87.83-21.53Q88.46-22.75 89.51-23.41 90.56-24.07 92.13-24.07L92.13-24.07Q94.47-24.07 95.61-22.84 96.74-21.61 96.74-18.58L96.74-18.58Q96.74-17.92 96.69-17.02 96.64-16.11 96.55-15.41L96.55-15.41 93.52-15.41Q93.57-15.65 93.58-16.26 93.59-16.87 93.6-17.48 93.62-18.09 93.62-18.31L93.62-18.31Q93.62-20.12 93.01-20.76 92.39-21.41 91.05-21.41L91.05-21.41Q88.2-21.41 87.15-19.19L87.15-19.19ZM103.62-19.19L103.62 0 100.47 0 100.47-23.75 103.62-23.75 103.62-21.53 104.38-21.53Q105.14-22.75 106.37-23.41 107.6-24.07 109.48-24.07L109.48-24.07Q112.24-24.07 113.58-22.86 114.93-21.66 114.93-18.82L114.93-18.82 114.93 0 111.8 0 111.8-19.09Q111.8-20.31 111.03-20.86 110.26-21.41 108.55-21.41L108.55-21.41Q106.85-21.41 105.55-20.83 104.26-20.24 103.62-19.19L103.62-19.19ZM131.35 8.13L131.35 8.13Q130.57 8.13 129.48 8.06 128.4 7.98 127.69 7.91L127.69 7.91 127.69 5.2Q129.2 5.32 131.25 5.32L131.25 5.32Q133.43 5.32 134.2 4.8 134.97 4.27 135.23 2.95L135.23 2.95 135.94 0 132.65 0 128.25-23.75 131.47-23.75 133.11-12.43 134.99-2.71 136.48-2.71 138.48-12.43 140.21-23.75 143.46-23.75 138.33 2.71Q137.87 5.59 136.38 6.86 134.89 8.13 131.35 8.13ZM153.71 0.29L153.71 0.29Q149.73 0.29 148.1-1.07 146.46-2.44 146.34-5.62L146.34-5.62Q146.19-7.42 146.14-9.63 146.1-11.84 146.14-14.09 146.19-16.33 146.34-18.16L146.34-18.16Q146.46-21.34 148.11-22.71 149.76-24.07 153.71-24.07L153.71-24.07Q157.72-24.07 159.32-22.71 160.92-21.34 161.04-18.16L161.04-18.16Q161.18-16.36 161.23-14.15 161.28-11.94 161.23-9.7 161.18-7.47 161.04-5.62L161.04-5.62Q160.92-2.47 159.32-1.09 157.72 0.29 153.71 0.29ZM153.71-2.44L153.71-2.44Q155.96-2.44 156.91-2.99 157.86-3.54 157.94-4.81L157.94-4.81Q158.18-8.62 158.18-11.89 158.18-15.16 157.94-18.97L157.94-18.97Q157.86-20.26 156.94-20.8 156.01-21.34 153.71-21.34L153.71-21.34Q151.42-21.34 150.48-20.8 149.54-20.26 149.46-18.97L149.46-18.97Q149.25-15.16 149.23-11.88 149.22-8.59 149.46-4.81L149.46-4.81Q149.51-3.54 150.5-2.99 151.49-2.44 153.71-2.44ZM170.8 0.29L170.8 0.29Q168.07 0.29 166.69-0.93 165.31-2.15 165.31-4.96L165.31-4.96 165.31-23.75 168.43-23.75 168.43-4.69Q168.43-3.49 169.19-2.93 169.95-2.37 171.65-2.37L171.65-2.37Q173.39-2.37 174.69-2.95 176-3.54 176.61-4.59L176.61-4.59 176.61-23.75 179.78-23.75 179.78 0 176.61 0 176.61-2.25 175.95-2.25Q174.34 0.29 170.8 0.29ZM187.57-19.19L187.57 0 184.42 0 184.42-23.75 187.57-23.75 187.57-21.53 188.25-21.53Q188.89-22.75 189.94-23.41 190.99-24.07 192.55-24.07L192.55-24.07Q194.89-24.07 196.03-22.84 197.16-21.61 197.16-18.58L197.16-18.58Q197.16-17.92 197.12-17.02 197.07-16.11 196.97-15.41L196.97-15.41 193.94-15.41Q193.99-15.65 194-16.26 194.02-16.87 194.03-17.48 194.04-18.09 194.04-18.31L194.04-18.31Q194.04-20.12 193.43-20.76 192.82-21.41 191.48-21.41L191.48-21.41Q188.62-21.41 187.57-19.19L187.57-19.19ZM218.18 0.29L218.18 0.29Q214.37 0.29 213.04-0.98 211.71-2.25 211.71-5.13L211.71-5.13 211.71-21.02 209.37-21.02 209.37-23.75 211.78-23.75 211.78-30.49 214.88-30.49 214.88-23.75 220.26-23.75 220.26-21.02 214.86-21.02 214.86-4.79Q214.86-3.44 215.42-2.93 215.98-2.42 218.25-2.42L218.25-2.42Q219.18-2.42 219.68-2.45 220.18-2.49 220.84-2.51L220.84-2.51 220.84 0.1Q220.26 0.2 219.57 0.24 218.89 0.29 218.18 0.29ZM226.53-19.19L226.53 0 223.38 0 223.38-31.69 226.53-31.69 226.53-21.53 227.28-21.53Q228.14-22.83 229.27-23.45 230.41-24.07 232.39-24.07L232.39-24.07Q235.15-24.07 236.49-22.86 237.83-21.66 237.83-18.82L237.83-18.82 237.83 0 234.71 0 234.71-19.09Q234.71-20.31 233.94-20.86 233.17-21.41 231.46-21.41L231.46-21.41Q227.8-21.41 226.53-19.19L226.53-19.19ZM249.47 0.29L249.47 0.29Q245.49 0.29 243.86-1.07 242.22-2.44 242.1-5.62L242.1-5.62Q241.95-7.42 241.91-9.63 241.86-11.84 241.91-14.09 241.95-16.33 242.1-18.16L242.1-18.16Q242.22-21.34 243.87-22.71 245.52-24.07 249.47-24.07L249.47-24.07Q253.48-24.07 255.08-22.71 256.68-21.34 256.8-18.16L256.8-18.16Q256.94-16.36 256.99-14.15 257.04-11.94 256.99-9.7 256.94-7.47 256.8-5.62L256.8-5.62Q256.68-2.47 255.08-1.09 253.48 0.29 249.47 0.29ZM249.47-2.44L249.47-2.44Q251.72-2.44 252.67-2.99 253.62-3.54 253.7-4.81L253.7-4.81Q253.94-8.62 253.94-11.89 253.94-15.16 253.7-18.97L253.7-18.97Q253.62-20.26 252.7-20.8 251.77-21.34 249.47-21.34L249.47-21.34Q247.18-21.34 246.24-20.8 245.3-20.26 245.23-18.97L245.23-18.97Q245.01-15.16 244.99-11.88 244.98-8.59 245.23-4.81L245.23-4.81Q245.28-3.54 246.26-2.99 247.25-2.44 249.47-2.44ZM266.56 0.29L266.56 0.29Q263.83 0.29 262.45-0.93 261.07-2.15 261.07-4.96L261.07-4.96 261.07-23.75 264.19-23.75 264.19-4.69Q264.19-3.49 264.95-2.93 265.71-2.37 267.42-2.37L267.42-2.37Q269.15-2.37 270.46-2.95 271.76-3.54 272.37-4.59L272.37-4.59 272.37-23.75 275.55-23.75 275.55 0 272.37 0 272.37-2.25 271.71-2.25Q270.1 0.29 266.56 0.29ZM286.8 6.86L286.8 6.86Q283.48 6.86 281.45 6.03 279.43 5.2 279.3 3.42L279.3 3.42Q279.3 3.22 279.28 2.95 279.25 2.69 279.25 2.39L279.25 2.39Q279.35 1.32 280.34 0.66 281.33 0 282.62-0.15L282.62-0.15 282.62-0.76Q280.21-1.27 280.13-2.86L280.13-2.86Q280.11-3.27 280.13-3.69L280.13-3.69Q280.16-4.52 280.9-5.08 281.65-5.64 282.57-5.74L282.57-5.74 282.57-6.35Q280.04-7.45 279.86-11.21L279.86-11.21Q279.79-12.67 279.75-13.76 279.72-14.84 279.74-15.95 279.77-17.07 279.86-18.58L279.86-18.58Q279.99-21.48 281.56-22.78 283.14-24.07 286.6-24.07L286.6-24.07Q289.14-24.07 290.63-23.49 292.12-22.9 292.78-21.66L292.78-21.66 293.46-21.66Q293.63-23.75 296.61-23.75L296.61-23.75 296.61-21.02 295.76-21.02Q293.59-21.02 293.49-18.51L293.49-18.51 293.44-16.58Q293.49-15.16 293.49-14.01 293.49-12.87 293.34-11.21L293.34-11.21Q293.22-8.25 291.68-6.98 290.14-5.71 286.6-5.71L286.6-5.71Q284.55-5.74 283.62-5.4 282.7-5.05 282.7-4.27L282.7-4.27 282.7-4.08Q282.75-3.37 283.72-3.08 284.7-2.78 286.97-2.73L286.97-2.73Q290.61-2.64 292.55-1.7 294.49-0.76 294.66 1.42L294.66 1.42 294.66 2.69Q294.49 4.98 292.32 5.92 290.14 6.86 286.8 6.86ZM286.6-8.47L286.6-8.47Q288.56-8.47 289.37-9.01 290.19-9.55 290.27-10.77L290.27-10.77Q290.39-12.5 290.39-14.81 290.39-17.11 290.27-19.02L290.27-19.02Q290.19-20.31 289.36-20.83 288.53-21.34 286.6-21.34L286.6-21.34Q284.67-21.34 283.84-20.81 283.01-20.29 282.92-18.99L282.92-18.99Q282.65-14.36 282.92-10.82L282.92-10.82Q283.01-9.62 283.87-9.05 284.72-8.47 286.6-8.47ZM286.87 4.27L286.87 4.27Q288.97 4.27 290.3 3.88 291.63 3.49 291.73 2.49L291.73 2.49Q291.75 2.22 291.74 1.99 291.73 1.76 291.73 1.51L291.73 1.51Q291.63 0.46 290.33 0.16 289.02-0.15 286.87-0.2L286.87-0.2Q284.8-0.24 283.56 0.12 282.33 0.49 282.21 1.54L282.21 1.54 282.21 2.49Q282.33 3.56 283.58 3.92 284.82 4.27 286.87 4.27ZM302.1-19.19L302.1 0 298.95 0 298.95-31.69 302.1-31.69 302.1-21.53 302.86-21.53Q303.71-22.83 304.85-23.45 305.99-24.07 307.96-24.07L307.96-24.07Q310.72-24.07 312.06-22.86 313.41-21.66 313.41-18.82L313.41-18.82 313.41 0 310.28 0 310.28-19.09Q310.28-20.31 309.51-20.86 308.74-21.41 307.04-21.41L307.04-21.41Q303.37-21.41 302.1-19.19L302.1-19.19ZM325.34 0.29L325.34 0.29Q321.53 0.29 320.2-0.98 318.87-2.25 318.87-5.13L318.87-5.13 318.87-21.02 316.53-21.02 316.53-23.75 318.95-23.75 318.95-30.49 322.05-30.49 322.05-23.75 327.42-23.75 327.42-21.02 322.02-21.02 322.02-4.79Q322.02-3.44 322.58-2.93 323.15-2.42 325.42-2.42L325.42-2.42Q326.34-2.42 326.84-2.45 327.35-2.49 328-2.51L328-2.51 328 0.1Q327.42 0.2 326.73 0.24 326.05 0.29 325.34 0.29ZM337.08 0.29L337.08 0.29Q333.15 0.29 331.63-0.98 330.1-2.25 329.98-5.13L329.98-5.13Q329.93-5.88 329.92-6.82 329.91-7.76 330-8.47L330-8.47 332.86-8.47Q332.81-7.35 332.82-6.41 332.84-5.47 332.86-4.81L332.86-4.81Q332.88-3.47 333.8-2.95 334.72-2.44 337.08-2.44L337.08-2.44Q339.5-2.44 340.49-2.95 341.48-3.47 341.55-4.81L341.55-4.81Q341.62-5.64 341.65-6.04 341.67-6.45 341.65-7.2L341.65-7.2Q341.58-8.45 340.99-9.13 340.4-9.81 338.45-10.11L338.45-10.11 335.59-10.77Q333.4-11.23 332.2-11.94 331-12.65 330.52-13.78 330.03-14.92 329.93-16.65L329.93-16.65Q329.86-17.53 330.05-18.58L330.05-18.58Q330.1-21.53 331.65-22.8 333.2-24.07 337.3-24.07L337.3-24.07Q341.23-24.07 342.76-22.83 344.29-21.58 344.43-18.73L344.43-18.73Q344.43-17.99 344.42-17.05 344.41-16.11 344.33-15.41L344.33-15.41 341.38-15.41Q341.5-16.26 341.49-17.36 341.48-18.46 341.43-19.07L341.43-19.07Q341.41-20.36 340.54-20.85 339.67-21.34 337.3-21.34L337.3-21.34Q334.91-21.34 334.04-20.85 333.18-20.36 333.08-19.07L333.08-19.07Q333.06-18.46 333.01-18.05 332.96-17.65 332.98-16.94L332.98-16.94Q333.06-16.09 333.24-15.43 333.42-14.77 334.07-14.34 334.72-13.92 336.18-13.7L336.18-13.7 338.91-13.13Q341.89-12.52 343.26-11.24 344.63-9.96 344.63-7.37L344.63-7.37Q344.63-6.84 344.62-6.23 344.6-5.62 344.55-5.05L344.55-5.05Q344.38-2.2 342.76-0.95 341.14 0.29 337.08 0.29ZM352.51-0.44L350.51 4.81 348.68 4.81 350.22 0 348.19 0 348.19-4.44 352.51-4.44 352.51-0.44ZM369.72-2.25L369.72 7.91 366.57 7.91 366.57-23.75 369.72-23.75 369.72-21.53 370.4-21.53Q371.23-22.83 372.39-23.45 373.55-24.07 375.58-24.07L375.58-24.07Q378.36-24.07 379.69-22.86 381.02-21.66 381.09-18.82L381.09-18.82Q381.17-17.58 381.19-15.81 381.22-14.04 381.22-12.07 381.22-10.11 381.19-8.25 381.17-6.4 381.09-4.96L381.09-4.96Q381.02-2.15 379.63-0.93 378.24 0.29 375.46 0.29L375.46 0.29Q373.62 0.29 372.45-0.31 371.28-0.9 370.4-2.25L370.4-2.25 369.72-2.25ZM374.58-2.37L374.58-2.37Q377.87-2.37 377.97-4.69L377.97-4.69Q378.17-8.47 378.13-12.16 378.09-15.84 377.97-19.09L377.97-19.09Q377.92-20.31 377.19-20.86 376.46-21.41 374.72-21.41L374.72-21.41Q370.99-21.41 369.72-19.19L369.72-19.19 369.72-4.59Q370.38-3.39 371.51-2.88 372.65-2.37 374.58-2.37ZM388.64-19.19L388.64 0 385.49 0 385.49-23.75 388.64-23.75 388.64-21.53 389.32-21.53Q389.95-22.75 391-23.41 392.05-24.07 393.62-24.07L393.62-24.07Q395.96-24.07 397.1-22.84 398.23-21.61 398.23-18.58L398.23-18.58Q398.23-17.92 398.18-17.02 398.13-16.11 398.04-15.41L398.04-15.41 395.01-15.41Q395.06-15.65 395.07-16.26 395.08-16.87 395.09-17.48 395.11-18.09 395.11-18.31L395.11-18.31Q395.11-20.12 394.5-20.76 393.89-21.41 392.54-21.41L392.54-21.41Q389.69-21.41 388.64-19.19L388.64-19.19ZM409.17 0.29L409.17 0.29Q405.19 0.29 403.55-1.07 401.92-2.44 401.79-5.62L401.79-5.62Q401.65-7.42 401.6-9.63 401.55-11.84 401.6-14.09 401.65-16.33 401.79-18.16L401.79-18.16Q401.92-21.34 403.56-22.71 405.21-24.07 409.17-24.07L409.17-24.07Q413.17-24.07 414.77-22.71 416.37-21.34 416.49-18.16L416.49-18.16Q416.64-16.36 416.69-14.15 416.73-11.94 416.69-9.7 416.64-7.47 416.49-5.62L416.49-5.62Q416.37-2.47 414.77-1.09 413.17 0.29 409.17 0.29ZM409.17-2.44L409.17-2.44Q411.41-2.44 412.36-2.99 413.32-3.54 413.39-4.81L413.39-4.81Q413.63-8.62 413.63-11.89 413.63-15.16 413.39-18.97L413.39-18.97Q413.32-20.26 412.39-20.8 411.46-21.34 409.17-21.34L409.17-21.34Q406.87-21.34 405.93-20.8 404.99-20.26 404.92-18.97L404.92-18.97Q404.7-15.16 404.69-11.88 404.67-8.59 404.92-4.81L404.92-4.81Q404.97-3.54 405.96-2.99 406.94-2.44 409.17-2.44ZM435.36-15.41L435.36-15.41 432.28-15.41Q432.38-16.26 432.37-17.36 432.36-18.46 432.36-19.07L432.36-19.07Q432.33-20.36 431.34-20.85 430.35-21.34 428.11-21.34L428.11-21.34Q425.81-21.34 424.84-20.85 423.86-20.36 423.84-19.07L423.84-19.07Q423.67-15.23 423.67-11.93 423.67-8.62 423.84-4.81L423.84-4.81Q423.86-3.47 424.84-2.95 425.81-2.44 428.08-2.44L428.08-2.44Q430.33-2.44 431.33-2.95 432.33-3.47 432.36-4.81L432.36-4.81Q432.36-5.47 432.37-6.41 432.38-7.35 432.28-8.47L432.28-8.47 435.36-8.47Q435.48-7.76 435.47-6.82 435.46-5.88 435.41-5.13L435.41-5.13Q435.26-2.25 433.61-0.98 431.97 0.29 428.08 0.29L428.08 0.29Q424.18 0.29 422.48-0.98 420.78-2.25 420.66-5.13L420.66-5.13Q420.56-6.93 420.53-9.38 420.49-11.82 420.53-14.28 420.56-16.75 420.66-18.58L420.66-18.58Q420.78-21.53 422.51-22.8 424.23-24.07 428.11-24.07L428.11-24.07Q431.97-24.07 433.66-22.83 435.36-21.58 435.41-18.73L435.41-18.73Q435.46-17.99 435.47-17.05 435.48-16.11 435.36-15.41ZM446.71 0.29L446.71 0.29Q442.68 0.29 440.96-0.98 439.24-2.25 439.12-5.13L439.12-5.13Q439.02-6.93 438.98-9.38 438.95-11.82 438.98-14.28 439.02-16.75 439.12-18.58L439.12-18.58Q439.24-21.53 441.01-22.8 442.78-24.07 446.71-24.07L446.71-24.07Q450.42-24.07 452.08-22.83 453.74-21.58 453.91-18.73L453.91-18.73Q453.96-17.87 454.01-15.75 454.06-13.62 453.86-11.23L453.86-11.23 442.17-11.23Q442.17-9.69 442.19-8.11 442.22-6.52 442.29-4.81L442.29-4.81Q442.32-3.47 443.32-2.95 444.32-2.44 446.61-2.44L446.61-2.44Q448.88-2.44 449.81-2.95 450.74-3.47 450.84-4.81L450.84-4.81Q450.91-6.15 450.84-8.47L450.84-8.47 453.86-8.47Q453.99-7.76 453.97-6.82 453.96-5.88 453.91-5.13L453.91-5.13Q453.74-2.25 452.17-0.98 450.59 0.29 446.71 0.29ZM442.17-13.82L442.17-13.82 450.88-13.82Q450.93-15.48 450.93-16.99 450.93-18.51 450.84-19.07L450.84-19.07Q450.74-20.29 449.79-20.81 448.83-21.34 446.71-21.34L446.71-21.34Q444.34-21.34 443.33-20.81 442.32-20.29 442.29-19.07L442.29-19.07Q442.22-17.65 442.18-16.36 442.14-15.06 442.17-13.82ZM464.55 0.29L464.55 0.29Q460.62 0.29 459.1-0.98 457.57-2.25 457.45-5.13L457.45-5.13Q457.4-5.88 457.39-6.82 457.38-7.76 457.47-8.47L457.47-8.47 460.33-8.47Q460.28-7.35 460.29-6.41 460.31-5.47 460.33-4.81L460.33-4.81Q460.35-3.47 461.27-2.95 462.19-2.44 464.55-2.44L464.55-2.44Q466.97-2.44 467.96-2.95 468.95-3.47 469.02-4.81L469.02-4.81Q469.1-5.64 469.12-6.04 469.14-6.45 469.12-7.2L469.12-7.2Q469.05-8.45 468.46-9.13 467.87-9.81 465.92-10.11L465.92-10.11 463.06-10.77Q460.87-11.23 459.67-11.94 458.47-12.65 457.99-13.78 457.5-14.92 457.4-16.65L457.4-16.65Q457.33-17.53 457.52-18.58L457.52-18.58Q457.57-21.53 459.12-22.8 460.67-24.07 464.77-24.07L464.77-24.07Q468.7-24.07 470.23-22.83 471.76-21.58 471.9-18.73L471.9-18.73Q471.9-17.99 471.89-17.05 471.88-16.11 471.81-15.41L471.81-15.41 468.85-15.41Q468.97-16.26 468.96-17.36 468.95-18.46 468.9-19.07L468.9-19.07Q468.88-20.36 468.01-20.85 467.14-21.34 464.77-21.34L464.77-21.34Q462.38-21.34 461.51-20.85 460.65-20.36 460.55-19.07L460.55-19.07Q460.53-18.46 460.48-18.05 460.43-17.65 460.45-16.94L460.45-16.94Q460.53-16.09 460.71-15.43 460.89-14.77 461.54-14.34 462.19-13.92 463.65-13.7L463.65-13.7 466.39-13.13Q469.36-12.52 470.73-11.24 472.1-9.96 472.1-7.37L472.1-7.37Q472.1-6.84 472.09-6.23 472.07-5.62 472.02-5.05L472.02-5.05Q471.85-2.2 470.23-0.95 468.61 0.29 464.55 0.29ZM482.5 0.29L482.5 0.29Q478.57 0.29 477.04-0.98 475.51-2.25 475.39-5.13L475.39-5.13Q475.34-5.88 475.33-6.82 475.32-7.76 475.42-8.47L475.42-8.47 478.27-8.47Q478.22-7.35 478.24-6.41 478.25-5.47 478.27-4.81L478.27-4.81Q478.3-3.47 479.21-2.95 480.13-2.44 482.5-2.44L482.5-2.44Q484.91-2.44 485.9-2.95 486.89-3.47 486.96-4.81L486.96-4.81Q487.04-5.64 487.06-6.04 487.09-6.45 487.06-7.2L487.06-7.2Q486.99-8.45 486.4-9.13 485.82-9.81 483.86-10.11L483.86-10.11 481.01-10.77Q478.81-11.23 477.61-11.94 476.42-12.65 475.93-13.78 475.44-14.92 475.34-16.65L475.34-16.65Q475.27-17.53 475.46-18.58L475.46-18.58Q475.51-21.53 477.06-22.8 478.61-24.07 482.72-24.07L482.72-24.07Q486.65-24.07 488.17-22.83 489.7-21.58 489.84-18.73L489.84-18.73Q489.84-17.99 489.83-17.05 489.82-16.11 489.75-15.41L489.75-15.41 486.79-15.41Q486.91-16.26 486.9-17.36 486.89-18.46 486.84-19.07L486.84-19.07Q486.82-20.36 485.95-20.85 485.08-21.34 482.72-21.34L482.72-21.34Q480.32-21.34 479.46-20.85 478.59-20.36 478.49-19.07L478.49-19.07Q478.47-18.46 478.42-18.05 478.37-17.65 478.39-16.94L478.39-16.94Q478.47-16.09 478.65-15.43 478.83-14.77 479.48-14.34 480.13-13.92 481.59-13.7L481.59-13.7 484.33-13.13Q487.31-12.52 488.67-11.24 490.04-9.96 490.04-7.37L490.04-7.37Q490.04-6.84 490.03-6.23 490.02-5.62 489.97-5.05L489.97-5.05Q489.8-2.2 488.17-0.95 486.55 0.29 482.5 0.29ZM505.88 8.13L505.88 8.13Q505.1 8.13 504.01 8.06 502.93 7.98 502.22 7.91L502.22 7.91 502.22 5.2Q503.73 5.32 505.78 5.32L505.78 5.32Q507.95 5.32 508.72 4.8 509.49 4.27 509.76 2.95L509.76 2.95 510.47 0 507.17 0 502.78-23.75 506-23.75 507.64-12.43 509.52-2.71 511.01-2.71 513.01-12.43 514.74-23.75 517.99-23.75 512.86 2.71Q512.4 5.59 510.91 6.86 509.42 8.13 505.88 8.13ZM528.24 0.29L528.24 0.29Q524.26 0.29 522.63-1.07 520.99-2.44 520.87-5.62L520.87-5.62Q520.72-7.42 520.67-9.63 520.62-11.84 520.67-14.09 520.72-16.33 520.87-18.16L520.87-18.16Q520.99-21.34 522.64-22.71 524.29-24.07 528.24-24.07L528.24-24.07Q532.24-24.07 533.84-22.71 535.44-21.34 535.56-18.16L535.56-18.16Q535.71-16.36 535.76-14.15 535.81-11.94 535.76-9.7 535.71-7.47 535.56-5.62L535.56-5.62Q535.44-2.47 533.84-1.09 532.24 0.29 528.24 0.29ZM528.24-2.44L528.24-2.44Q530.49-2.44 531.44-2.99 532.39-3.54 532.46-4.81L532.46-4.81Q532.71-8.62 532.71-11.89 532.71-15.16 532.46-18.97L532.46-18.97Q532.39-20.26 531.46-20.8 530.54-21.34 528.24-21.34L528.24-21.34Q525.95-21.34 525.01-20.8 524.07-20.26 523.99-18.97L523.99-18.97Q523.77-15.16 523.76-11.88 523.75-8.59 523.99-4.81L523.99-4.81Q524.04-3.54 525.03-2.99 526.02-2.44 528.24-2.44ZM545.33 0.29L545.33 0.29Q542.59 0.29 541.21-0.93 539.83-2.15 539.83-4.96L539.83-4.96 539.83-23.75 542.96-23.75 542.96-4.69Q542.96-3.49 543.72-2.93 544.47-2.37 546.18-2.37L546.18-2.37Q547.92-2.37 549.22-2.95 550.53-3.54 551.14-4.59L551.14-4.59 551.14-23.75 554.31-23.75 554.31 0 551.14 0 551.14-2.25 550.48-2.25Q548.87 0.29 545.33 0.29ZM562.1-19.19L562.1 0 558.95 0 558.95-23.75 562.1-23.75 562.1-21.53 562.78-21.53Q563.42-22.75 564.47-23.41 565.52-24.07 567.08-24.07L567.08-24.07Q569.42-24.07 570.56-22.84 571.69-21.61 571.69-18.58L571.69-18.58Q571.69-17.92 571.64-17.02 571.59-16.11 571.5-15.41L571.5-15.41 568.47-15.41Q568.52-15.65 568.53-16.26 568.54-16.87 568.56-17.48 568.57-18.09 568.57-18.31L568.57-18.31Q568.57-20.12 567.96-20.76 567.35-21.41 566-21.41L566-21.41Q563.15-21.41 562.1-19.19L562.1-19.19ZM590.46 0.29L590.46 0.29Q587.7 0.29 586.36-0.93 585.02-2.15 584.94-4.96L584.94-4.96Q584.85-6.96 584.81-9.35 584.77-11.74 584.81-14.21 584.85-16.67 584.94-18.82L584.94-18.82Q585.02-21.66 586.4-22.86 587.78-24.07 590.51-24.07L590.51-24.07Q592.54-24.07 593.7-23.45 594.86-22.83 595.71-21.53L595.71-21.53 596.35-21.53 596.35-31.69 599.47-31.69 599.47 0 596.35 0 596.35-2.25 595.64-2.25Q594.81-1.03 593.65-0.37 592.49 0.29 590.46 0.29ZM591.37-2.37L591.37-2.37Q595.05-2.37 596.35-4.59L596.35-4.59 596.35-19.19Q595.08-21.41 591.39-21.41L591.39-21.41Q589.68-21.41 588.91-20.86 588.14-20.31 588.12-19.09L588.12-19.09Q587.97-15.43 588-11.66 588.02-7.89 588.12-4.69L588.12-4.69Q588.17-3.49 588.91-2.93 589.66-2.37 591.37-2.37ZM609.58 0.27L609.58 0.27Q606.6 0.27 605.17-0.9 603.74-2.08 603.5-4.57L603.5-4.57Q603.47-5.05 603.44-5.54 603.4-6.03 603.45-6.49L603.45-6.49Q603.62-8.67 604.81-10.14 606.01-11.62 609.36-12.84L609.36-12.84Q610.72-13.33 612.24-13.72 613.75-14.11 615.24-14.48L615.24-14.48 615.24-18.99Q615.24-20.19 614.34-20.76 613.43-21.34 611.19-21.34L611.19-21.34Q609.23-21.34 608.22-20.85 607.21-20.36 607.11-19.07L607.11-19.07Q607.06-18.46 607.06-17.32 607.06-16.19 607.11-15.41L607.11-15.41 604.06-15.41Q604.01-16.02 603.96-16.99 603.91-17.97 603.98-18.73L603.98-18.73Q604.11-21.56 605.83-22.81 607.55-24.07 611.31-24.07L611.31-24.07Q615.24-24.07 616.77-22.71 618.29-21.34 618.32-18.21L618.32-18.21 618.32 0 615.24 0 615.24-2.25 614.56-2.25Q613.95-1.03 612.81-0.38 611.68 0.27 609.58 0.27ZM610.36-2.37L610.36-2.37Q613.87-2.37 615.22-4.47L615.22-4.47 615.22-11.87Q614.04-11.62 612.81-11.29 611.58-10.96 609.92-10.4L609.92-10.4Q607.94-9.67 607.28-8.72 606.62-7.76 606.52-6.49L606.52-6.49Q606.55-6.13 606.56-5.7 606.57-5.27 606.62-4.81L606.62-4.81Q606.79-3.64 607.79-3 608.79-2.37 610.36-2.37ZM630.3 0.29L630.3 0.29Q626.49 0.29 625.16-0.98 623.83-2.25 623.83-5.13L623.83-5.13 623.83-21.02 621.49-21.02 621.49-23.75 623.9-23.75 623.9-30.49 627-30.49 627-23.75 632.38-23.75 632.38-21.02 626.98-21.02 626.98-4.79Q626.98-3.44 627.54-2.93 628.1-2.42 630.37-2.42L630.37-2.42Q631.3-2.42 631.8-2.45 632.3-2.49 632.96-2.51L632.96-2.51 632.96 0.1Q632.38 0.2 631.69 0.24 631.01 0.29 630.3 0.29ZM641.02 0.27L641.02 0.27Q638.04 0.27 636.61-0.9 635.18-2.08 634.94-4.57L634.94-4.57Q634.91-5.05 634.88-5.54 634.84-6.03 634.89-6.49L634.89-6.49Q635.06-8.67 636.26-10.14 637.45-11.62 640.8-12.84L640.8-12.84Q642.16-13.33 643.68-13.72 645.19-14.11 646.68-14.48L646.68-14.48 646.68-18.99Q646.68-20.19 645.78-20.76 644.87-21.34 642.63-21.34L642.63-21.34Q640.67-21.34 639.66-20.85 638.65-20.36 638.55-19.07L638.55-19.07Q638.5-18.46 638.5-17.32 638.5-16.19 638.55-15.41L638.55-15.41 635.5-15.41Q635.45-16.02 635.4-16.99 635.35-17.97 635.42-18.73L635.42-18.73Q635.55-21.56 637.27-22.81 638.99-24.07 642.75-24.07L642.75-24.07Q646.68-24.07 648.21-22.71 649.73-21.34 649.76-18.21L649.76-18.21 649.76 0 646.68 0 646.68-2.25 646-2.25Q645.39-1.03 644.25-0.38 643.12 0.27 641.02 0.27ZM641.8-2.37L641.8-2.37Q645.31-2.37 646.66-4.47L646.66-4.47 646.66-11.87Q645.48-11.62 644.25-11.29 643.02-10.96 641.36-10.4L641.36-10.4Q639.38-9.67 638.72-8.72 638.06-7.76 637.96-6.49L637.96-6.49Q637.99-6.13 638-5.7 638.01-5.27 638.06-4.81L638.06-4.81Q638.23-3.64 639.23-3 640.23-2.37 641.8-2.37ZM658.27-4.37L658.27 0 653.95 0 653.95-4.37 658.27-4.37Z" opacity="1" transform="matrix(1,0,0,1,0,0)" fill="#7a26c1" class="slogan-text-1" data-fill-palette-color="secondary" id="text-1"></path></svg></g></svg></g></svg></g></svg></g><g></g></svg></g><defs></defs></svg><rect width="341.4206560639087" height="91.92077236413178" fill="none" stroke="none" visibility="hidden"></rect></g></svg></g></svg>
`;var ae="mesh-view",Pe=class extends ne.ItemView{constructor(e,s){super(e);this.selectedPatterns=[];this.handleClickOutside=e=>{(!(e.target instanceof Node)||!this.patternResults.contains(e.target))&&(this.patternResults.style.display="none")};this.plugin=s,this.patternStitchingEnabled=this.plugin.settings.patternStitchingEnabled}getViewType(){return ae}getDisplayText(){return"Mesh AI"}async onOpen(){let e=this.containerEl.children[1];e.empty(),e.addClass("mesh-view-container");let s=e.createEl("div",{cls:"particles-js",attr:{id:"particles-js"}}),r=e.createEl("div",{cls:"mesh-form-container"}),i=this.createLogoElement(nt);r.appendChild(i);let o=this.createCard(r,"provider"),a=pe.createSelect(o,"mesh-provider-select",["openai","google","microsoft","anthropic","grocq","ollama"]),u=this.createCard(r,"input"),b=pe.createSelect(u,"mesh-input-source-select",["active-note","clipboard","tavily"]),T=u.createEl("input",{type:"text",placeholder:"Enter Tavily search query",cls:"mesh-tavily-input"});T.style.display="none",b.addEventListener("change",()=>{T.style.display=b.value==="tavily"?"block":"none"});let $=this.createCard(r,"patterns"),S=$.createEl("div",{cls:"pattern-search-container"});this.patternInput=new ne.TextComponent(S).setPlaceholder("Search patterns...").onChange(X=>{We(this.plugin,X,this.patternResults,D=>{Xe(D,this.selectedPatterns,()=>{Ze(this.selectedPatternsContainer,this.selectedPatterns,ie=>{this.selectedPatterns=ie,this.updateSelectedPatternsVisibility()})},()=>this.patternInput.setValue(""),()=>this.patternResults.empty())})}),this.patternResults=S.createEl("div",{cls:"pattern-results"}),this.patternInput.inputEl.addClass("pattern-search-input");let B=$.createEl("h4",{text:"Selected Patterns",cls:"mesh-selected-patterns-title"});B.style.display="none",this.selectedPatternsContainer=$.createEl("div",{cls:"selected-patterns-container"}),this.selectedPatternsContainer.style.display="none",this.updateSelectedPatternsVisibility();let V=$.createEl("div",{cls:"pattern-stitching-container"}),Y=V.createEl("label",{cls:"switch"}),de=Y.createEl("input",{type:"checkbox",cls:"pattern-stitching-input"});de.checked=this.patternStitchingEnabled,Y.createEl("span",{cls:"slider round"});let ue=V.createEl("span",{text:"Pattern Stitching",cls:"pattern-stitching-label"});de.addEventListener("change",X=>{this.patternStitchingEnabled=X.target.checked,this.plugin.settings.patternStitchingEnabled=this.patternStitchingEnabled,this.plugin.saveSettings();let D=this.patternStitchingEnabled?"enabled":"disabled";new ne.Notice(`Pattern Stitching ${D}.`)});let Ne=this.createCard(r,"output");this.outputFileNameInput=Ne.createEl("input",{type:"text",placeholder:"Output file name (optional)",cls:"mesh-output-filename-input"}),r.createEl("div",{cls:"mesh-submit-button-container"}).createEl("button",{text:"Submit",cls:"mesh-submit-button"}).addEventListener("click",this.onSubmit.bind(this)),this.loadingElement=e.createEl("div",{text:"Processing...",cls:"mesh-loading"}),this.loadingElement.hide(),this.initParticles(),document.addEventListener("click",this.handleClickOutside)}initParticles(){let e=this.containerEl.children[1],s=e.createEl("div",{cls:"particles-js",attr:{id:"particles-js"}});if(window.particlesJS){let r=()=>{window.particlesJS("particles-js",{particles:{number:{value:80,density:{enable:!0,value_area:800}},color:{value:["#81a0ed","#694daa"]},shape:{type:"circle"},opacity:{value:.5,random:!1},size:{value:3,random:!0},line_linked:{enable:!0,distance:150,color:"#81a0ed",opacity:.4,width:1},move:{enable:!0,speed:2,direction:"none",random:!1,straight:!1,out_mode:"out",bounce:!1}},interactivity:{detect_on:"canvas",events:{onhover:{enable:!0,mode:"repulse"},onclick:{enable:!0,mode:"push"},resize:!0},modes:{grab:{distance:400,line_linked:{opacity:1}},bubble:{distance:400,size:40,duration:2,opacity:8,speed:3},repulse:{distance:200,duration:.4},push:{particles_nb:4},remove:{particles_nb:2}}},retina_detect:!0})};r();let i=this.debounce(()=>{window.pJSDom&&window.pJSDom[0]&&window.pJSDom[0].pJS&&window.pJSDom[0].pJS.fn.vendors.destroypJS(),r()},250);window.addEventListener("resize",i),new ResizeObserver(()=>{let a=s.querySelector("canvas");a&&(a.width=s.clientWidth,a.height=s.clientHeight)}).observe(e)}}debounce(e,s){let r;return(...i)=>{clearTimeout(r),r=setTimeout(()=>e.apply(this,i),s)}}createCard(e,s){let r=e.createEl("div",{cls:`mesh-card ${s.toLowerCase()}`});return r.createEl("h3",{text:s,cls:"mesh-card-title"}),r}updateTheme(){let e=document.body.classList.contains("theme-dark");this.containerEl.toggleClass("theme-dark",e),this.containerEl.toggleClass("theme-light",!e)}async onSubmit(){G(this.plugin,"onSubmit method called");let e=this.containerEl.querySelector(".mesh-provider-select"),s=this.containerEl.querySelector(".mesh-input-source-select"),r=this.containerEl.querySelector(".mesh-tavily-input");G(this.plugin,"Selected provider:",e.value),G(this.plugin,"Selected input source:",s.value),G(this.plugin,"Tavily search input:",r.value);let i=e.value,o=s.value,a=this.selectedPatterns;try{G(this.plugin,"Getting input content...");let u=await tt(this.app,this.plugin,o,r);if(this.showLoading(),G(this.plugin,"Processing patterns..."),this.patternStitchingEnabled){let b=await st(this.plugin,i,a,u);G(this.plugin,"Creating output file..."),await De(this.plugin,b,this.outputFileNameInput);return}else{let b=await rt(this.plugin,i,a,u);G(this.plugin,"Creating output file..."),await De(this.plugin,b,this.outputFileNameInput)}}catch(u){console.error("Error processing request:",u),new ne.Notice(`Error: ${u.message}`)}finally{this.hideLoading()}}async showLoading(){let e=this.containerEl.querySelector(".mesh-form-container"),s=Array.from(e.querySelectorAll(".mesh-card")),r=this.containerEl.querySelector(".mesh-submit-button-container"),i=r.querySelector(".mesh-submit-button");for(let o=0;o<s.length;o++){let a=s[o];a.classList.add("rotating"),await new Promise(u=>setTimeout(u,500)),a.addEventListener("animationend",()=>{a.classList.remove("rotating")},{once:!0})}r.classList.add("processing"),i.classList.add("processing"),i.disabled=!0}hideLoading(){let s=this.containerEl.querySelector(".mesh-form-container").querySelectorAll(".mesh-card"),r=this.containerEl.querySelector(".mesh-submit-button-container"),i=r.querySelector(".mesh-submit-button");s.forEach(o=>{o.classList.remove("rotating")}),r.classList.remove("processing"),i.classList.remove("processing"),i.disabled=!1}updateSelectedPatternsVisibility(){let e=this.containerEl.querySelector(".mesh-selected-patterns-title");if(this.selectedPatternsContainer&&e){let s=this.selectedPatterns.length>0;this.selectedPatternsContainer.style.display=s?"block":"none",e.style.display=s?"block":"none",console.log(`Selected patterns visibility updated. Is visible: ${s}`)}}createLogoElement(e){let s=document.createElement("div");return s.className="mesh-logo-container",s.innerHTML=e,s}};var F=require("obsidian"),Ee=class extends F.PluginSettingTab{constructor(e,s){super(e,s);this.plugin=s}async display(){let{containerEl:e}=this;e.empty();let s=["openai","google","microsoft","anthropic","grocq","ollama"];for(let r of s)if(r==="ollama"?new F.Setting(e).setName("Ollama server URL").setDesc("Enter the URL for your Ollama server").addText(o=>o.setPlaceholder("Enter URL").setValue(this.plugin.settings.ollamaServerUrl).onChange(async a=>{this.plugin.settings.ollamaServerUrl=a,await this.plugin.saveSettings()})):new F.Setting(e).setName(`${r.charAt(0).toUpperCase()+r.slice(1)} API key`).setDesc(`Enter your ${r} API key`).addText(o=>o.setPlaceholder("Enter API key").setValue(this.plugin.settings[`${r}ApiKey`]).onChange(async a=>{this.plugin.settings[`${r}ApiKey`]=a,await this.plugin.saveSettings()})),r==="ollama"?this.plugin.settings.ollamaServerUrl:this.plugin.settings[`${r}ApiKey`]){let o=new F.Setting(e).setName(`${r.charAt(0).toUpperCase()+r.slice(1)} model`).setDesc(`Select the model for ${r}`).addDropdown(async a=>{await this.populateModelDropdown(a,r)});o.addButton(a=>{a.setButtonText("Refresh models").onClick(async()=>{let u=o.components[0];await this.populateModelDropdown(u,r,!0)})})}new F.Setting(e).setName("Selected provider").setDesc("Choose the default provider").addDropdown(r=>{s.forEach(i=>{(i==="ollama"?this.plugin.settings.ollamaServerUrl:this.plugin.settings[`${i}ApiKey`])&&r.addOption(i,i)}),r.setValue(this.plugin.settings.selectedProvider).onChange(async i=>{this.plugin.settings.selectedProvider=i,await this.plugin.saveSettings()})}),new F.Setting(e).setName("Tavily API key").setDesc("Enter your Tavily API key").addText(r=>r.setPlaceholder("Enter API key").setValue(this.plugin.settings.tavilyApiKey).onChange(async i=>{this.plugin.settings.tavilyApiKey=i,await this.plugin.saveSettings()})),new F.Setting(e).setName("YouTube API key").setDesc("Enter your YouTube API key for transcript fetching").addText(r=>r.setPlaceholder("Enter API key").setValue(this.plugin.settings.youtubeApiKey).onChange(async i=>{this.plugin.settings.youtubeApiKey=i,await this.plugin.saveSettings()})),new F.Setting(e).setName("Custom patterns folder").setDesc(`Enter the name of the folder containing custom patterns. If it's in the root of your vault, just enter the folder name (e.g., "Custom Patterns").`).addText(r=>r.setPlaceholder("Custom Patterns").setValue(this.plugin.settings.customPatternsFolder).onChange(async i=>{this.plugin.settings.customPatternsFolder=i,await this.plugin.saveSettings()})),new F.Setting(e).setName("Fabric Patterns Folder").setDesc("Folder where downloaded patterns will be saved").addText(r=>r.setPlaceholder("Enter folder path").setValue(this.plugin.settings.fabricPatternsFolder).onChange(async i=>{this.plugin.settings.fabricPatternsFolder=i,await this.plugin.saveSettings()})),new F.Setting(e).setName("Download Patterns").setDesc("Download patterns from GitHub").addButton(r=>r.setButtonText("Download").onClick(async()=>{await this.plugin.downloadPatternsFromGitHub(),this.display()})),new F.Setting(e).setName("Mesh output folder").setDesc("Enter the name of the folder for Mesh AI output. If it's in the root of your vault, just enter the folder name.").addText(r=>r.setPlaceholder("Mesh Output").setValue(this.plugin.settings.meshOutputFolder).onChange(async i=>{this.plugin.settings.meshOutputFolder=i,await this.plugin.saveSettings()})),new F.Setting(e).setName("Enable Debugging").setDesc("Turn on console logging for debugging purposes").addToggle(r=>r.setValue(this.plugin.settings.enableDebugging).onChange(async i=>{this.plugin.settings.enableDebugging=i;let o=this.plugin.settings.enableDebugging?"enabled":"disabled";new F.Notice(`Debugging ${o}.`),await this.plugin.saveSettings()}))}async populateModelDropdown(e,s,r=!1){var i;e.selectEl.disabled=!0;try{let o;if(r?o=await this.getModelsForProvider(s):o=this.plugin.settings.providerModels[s]||await this.getModelsForProvider(s),e.selectEl.innerHTML="",o&&o.length>0){o.forEach(b=>e.addOption(b,b));let a=(i=this.plugin.settings.providerModels[s])==null?void 0:i[0],u=o.includes(a)?a:o[0];e.setValue(u).onChange(async b=>{this.plugin.settings.providerModels[s]=[b],await this.plugin.saveSettings()})}else e.addOption("","No models available"),console.warn(`No models available for ${s}`)}catch(o){console.error(`Error fetching models for ${s}:`,o),e.addOption("error","Error fetching models")}finally{e.selectEl.disabled=!1}}async getModelsForProvider(e){try{let s=this.plugin.getProvider(e);if(s&&"getAvailableModels"in s)return await s.getAvailableModels()}catch(s){console.error(`Error fetching models for ${e}:`,s)}return this.plugin.settings.providerModels[e]||[]}};var it={openaiApiKey:"",googleApiKey:"",microsoftApiKey:"",anthropicApiKey:"",grocqApiKey:"",tavilyApiKey:"",youtubeApiKey:"",ollamaServerUrl:"http://localhost:11434",selectedProvider:"openai",selectedModel:"",providerModels:{openai:[],google:[],microsoft:[],anthropic:[],grocq:[],ollama:[]},customPatternsFolder:"",fabricPatternsFolder:"",meshOutputFolder:"",patternStitchingEnabled:!1,enableDebugging:!1};var le=class{constructor(t,e={}){this.baseUrl=t,this.headers=e}async fetchWithErrorHandling(t,e){let s=await fetch(t,e);if(!s.ok)throw new Error(`HTTP error! status: ${s.status}`);return s}};var Z=class extends le{async get(t){let e=await fetch(`${this.baseUrl}${t}`,{method:"GET",headers:this.headers});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return e.json()}async post(t,e,s=!1){let r=await fetch(`${this.baseUrl}${t}`,{method:"POST",headers:this.headers,body:JSON.stringify(e)});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);return s?r:await r.json()}async postStream(t,e,s){var a;let i=(a=(await this.fetchWithErrorHandling(`${this.baseUrl}${t}`,{method:"POST",headers:{"Content-Type":"application/json",...this.headers},body:JSON.stringify(e)})).body)==null?void 0:a.getReader(),o=new TextDecoder;if(i)try{for(;;){let{done:u,value:b}=await i.read();if(u)break;let $=o.decode(b,{stream:!0}).split(`
`).filter(S=>S.trim()!=="");for(let S of $)if(S.startsWith("data: ")){let B=S.slice(6);if(B==="[DONE]")break;try{let V=JSON.parse(B);s(V)}catch(V){console.error("Error parsing JSON:",V)}}}}finally{i.releaseLock()}}};var Me=class{constructor(t,e){this.apiHelper=new Z("https://api.openai.com/v1",{Authorization:`Bearer ${t}`,"Content-Type":"application/json"}),this.plugin=e}async generateResponse(t,e){let s=this.plugin.settings.providerModels.openai,r=s&&s.length>0?s[0]:"gpt-3.5-turbo";if(console.log("Using OpenAI model:",r),!r)throw new Error("No OpenAI model has been selected. Please choose a model in the settings.");let i="/chat/completions",o={model:r,messages:[{role:"system",content:"You are a helpful assistant."},{role:"user",content:t}],stream:!!e};try{if(e){let a="";return await this.apiHelper.postStream(i,o,u=>{if(u.choices&&u.choices[0].delta&&u.choices[0].delta.content){let b=u.choices[0].delta.content;a+=b,e(b)}}),a.trim()}else{let a=await this.apiHelper.post(i,o);if(a.choices&&a.choices[0]&&a.choices[0].message)return a.choices[0].message.content.trim();throw new Error("Unexpected response format from OpenAI API")}}catch(a){throw console.error(`Error generating response with model ${r}:`,a),a.response&&(console.error("Response status:",a.response.status),console.error("Response data:",a.response.data)),new Error(`Failed to generate response: ${a.message}`)}}async getAvailableModels(){try{let t=await this.apiHelper.get("/models");if(t.data&&Array.isArray(t.data))return t.data.filter(e=>e.id.startsWith("gpt-")).map(e=>e.id);throw new Error("Unexpected response format from OpenAI API")}catch(t){throw console.error("Error fetching OpenAI models:",t),t}}};var ot=require("obsidian"),xe=class{constructor(t,e){this.apiHelper=new Z("https://generativelanguage.googleapis.com/v1beta",{"x-goog-api-key":t}),this.plugin=e}async getAvailableModels(){try{let t=await this.apiHelper.post("/models",{});if(t.models&&Array.isArray(t.models))return t.models.filter(e=>e.supportedGenerationMethods.includes("generateContent")).map(e=>e.name);throw new Error("Unexpected response format from Google API")}catch(t){throw console.error("Error fetching Google models:",t),t}}async generateResponse(t,e){let s=this.plugin.settings.providerModels.google,r=s&&s.length>0?s[0]:"chat-bison-001";r||new ot.Notice('No Google model has been selected. Using default model "chat-bison-001".');let i="";try{return await this.apiHelper.postStream(`/models/${r}:streamGenerateContent`,{contents:[{parts:[{text:t}]}],safety_settings:[{category:"HARM_CATEGORY_DANGEROUS",threshold:"BLOCK_NONE"},{category:"HARM_CATEGORY_HARASSMENT",threshold:"BLOCK_NONE"},{category:"HARM_CATEGORY_HATE_SPEECH",threshold:"BLOCK_NONE"},{category:"HARM_CATEGORY_SEXUALLY_EXPLICIT",threshold:"BLOCK_NONE"},{category:"HARM_CATEGORY_DANGEROUS_CONTENT",threshold:"BLOCK_NONE"}]},o=>{if(o.candidates&&o.candidates[0].content&&o.candidates[0].content.parts){let a=o.candidates[0].content.parts[0].text;i+=a,e&&e(a)}}),i}catch(o){throw console.error(`Error generating response with model ${r}:`,o),new Error(`Failed to generate response: ${o.message}`)}}};var at=require("obsidian"),Ae=class{constructor(t,e){this.apiHelper=new Z("https://api.cognitive.microsoft.com",{"api-key":t}),this.plugin=e}async getAvailableModels(){try{let t=await this.apiHelper.post("/openai/deployments?api-version=2023-05-15",{});if(t.value&&Array.isArray(t.value))return t.value.filter(e=>e.model.startsWith("gpt")).map(e=>e.id);throw new Error("Unexpected response format from Microsoft API")}catch(t){throw console.error("Error fetching Microsoft models:",t),t}}async generateResponse(t,e){let s=this.plugin.settings.providerModels.microsoft,r=s&&s.length>0?s[0]:"gpt-35-turbo";r||new at.Notice('No Microsoft model has been selected. Using default model "gpt-35-turbo".');let i="";try{return await this.apiHelper.postStream(`/openai/deployments/${r}/chat/completions?api-version=2023-05-15`,{messages:[{role:"user",content:t}],stream:!0},o=>{if(o.choices&&o.choices[0].delta&&o.choices[0].delta.content){let a=o.choices[0].delta.content;i+=a,e&&e(a)}}),i}catch(o){throw console.error(`Error generating response with model ${r}:`,o),new Error(`Failed to generate response: ${o.message}`)}}};var lt=require("obsidian"),Se=class{constructor(t,e){this.apiHelper=new Z("https://api.anthropic.com/v1",{"x-api-key":t,"anthropic-version":"2023-06-01"}),this.plugin=e}async getAvailableModels(){try{let t=await this.apiHelper.post("/models",{});if(t.models&&Array.isArray(t.models))return t.models.filter(e=>e.type==="chat").map(e=>e.id);throw new Error("Unexpected response format from Anthropic API")}catch(t){throw console.error("Error fetching Anthropic models:",t),t}}async generateResponse(t,e){let s=this.plugin.settings.providerModels.anthropic,r=s&&s.length>0?s[0]:"claude-2";r||new lt.Notice('No Anthropic model has been selected. Using default model "claude-2".');let i="";try{return await this.apiHelper.postStream("/messages",{model:r,messages:[{role:"user",content:t}],max_tokens:1e3,stream:!0},o=>{var a;if(o.type==="content_block_delta"&&((a=o.delta)!=null&&a.text)){let u=o.delta.text;i+=u,e&&e(u)}}),i}catch(o){throw console.error(`Error generating response with model ${r}:`,o),new Error(`Failed to generate response: ${o.message}`)}}};var ct=require("obsidian"),Te=class{constructor(t,e){this.apiHelper=new Z("https://api.groq.com/openai/v1",{Authorization:`Bearer ${t}`,"Content-Type":"application/json"}),this.plugin=e}async getAvailableModels(){try{let t=await this.apiHelper.get("/models");if(t.data&&Array.isArray(t.data))return t.data.map(e=>e.id);throw new Error("Unexpected response format from Groq API")}catch(t){throw console.error("Error fetching Groq models:",t),t}}async generateResponse(t,e){let s=this.plugin.settings.providerModels.grocq,r=s&&s.length>0?s[0]:"mixtral-8x7b-32768";r||new ct.Notice('No Groq model has been selected. Using default model "mixtral-8x7b-32768".');try{let i=await this.apiHelper.post("/chat/completions",{model:r,messages:[{role:"user",content:t}]});if(i.choices&&i.choices.length>0){let o=i.choices[0].message.content;return e&&e(o),o}else throw new Error("No response content received from Groq API")}catch(i){throw console.error(`Error generating response with model ${r}:`,i),new Error(`Failed to generate response: ${i.message}`)}}};var pt=require("obsidian");var Ie=class extends le{async get(t){let e=await fetch(`${this.baseUrl}${t}`,{method:"GET"});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return e.json()}async post(t,e){return await(await this.fetchWithErrorHandling(`${this.baseUrl}${t}`,{method:"POST",headers:{"Content-Type":"application/json",...this.headers},body:JSON.stringify(e)})).json()}async postStream(t,e,s){var a;let i=(a=(await this.fetchWithErrorHandling(`${this.baseUrl}${t}`,{method:"POST",headers:{"Content-Type":"application/json",...this.headers},body:JSON.stringify(e)})).body)==null?void 0:a.getReader(),o=new TextDecoder;if(i)try{let u="";for(;;){let{done:b,value:T}=await i.read();if(b)break;u+=o.decode(T,{stream:!0});let $;for(;($=u.indexOf(`
`))!==-1;){let S=u.slice(0,$);if(u=u.slice($+1),S.trim())try{let B=JSON.parse(S);s(B)}catch(B){console.error("Error parsing JSON:",B)}}}}finally{i.releaseLock()}}};var Ce=class{constructor(t,e){this.apiHelper=new Ie(t),this.plugin=e}async getAvailableModels(){try{let t=await this.apiHelper.get("/api/tags");if(t.models&&Array.isArray(t.models))return t.models.map(e=>e.name);throw new Error("Unexpected response format from Ollama API")}catch(t){throw console.error("Error fetching Ollama models:",t),new Error("Failed to fetch Ollama models. Please ensure the Ollama server is running and the URL is correct.")}}async generateResponse(t,e){let s=this.plugin.settings.providerModels.ollama,r=s&&s.length>0?s[0]:"llama2";r||new pt.Notice('No Ollama model has been selected. Using default model "llama2".');let i="";try{return await this.apiHelper.postStream("/api/generate",{model:r,prompt:t,stream:!0},o=>{o.response&&(i+=o.response,e&&e(o.response))}),i}catch(o){throw console.error(`Error generating response with model ${r}:`,o),new Error(`Failed to generate response: ${o.message}`)}}};var qe=require("obsidian"),_e=class{constructor(t){console.log("Initializing YoutubeProvider"),this.plugin=t}async getTranscript(t){console.log(`[getTranscript] Attempting to fetch transcript for URL: ${t}`);try{let e=this.extractVideoId(t);if(!e)throw new Error("Invalid YouTube URL, cannot extract video ID");let s=await this.grabTranscriptBase(e);if(!s)throw new Error("No transcript found for this video");let o=new DOMParser().parseFromString(s,"text/xml").getElementsByTagName("text"),a="";for(let u=0;u<o.length;u++)a+=o[u].textContent+" ";return console.log(`[getTranscript] Transcript fetched successfully. Length: ${a.length}`),a.trim()}catch(e){throw console.error("[getTranscript] Error fetching YouTube transcript:",e),e}}async grabTranscriptBase(t){let e=`https://www.youtube.com/watch?v=${t}`,r=(await(0,qe.requestUrl)({url:e})).text,i=/"captionTracks":(\[.*?\])/,o=r.match(i);if(o&&o[1]){let a=JSON.parse(o[1]);if(a.length>0){let u=a[0].baseUrl;return(await(0,qe.requestUrl)({url:u})).text}}return null}extractVideoId(t){let e=/(?:https?:\/\/)?(?:www\.)?(?:youtube\.com\/(?:[^\/\n\s]+\/\S+\/|(?:v|e(?:mbed)?)\/|\S*?[?&]v=)|youtu\.be\/)([a-zA-Z0-9_-]{11})/,s=t.match(e);return s?s[1]:null}};var He=class{constructor(t,e){this.apiHelper=new Z("https://api.tavily.com",{"Content-Type":"application/json"}),this.plugin=e,this.apiKey=t}async search(t){try{let e=await this.apiHelper.post("/search",{api_key:this.apiKey,query:t,search_depth:"advanced",include_answer:!0,include_images:!0,include_raw_content:!1,max_results:10});if(e)return JSON.stringify(e);throw new Error("No results found in Tavily response")}catch(e){throw console.error("Error fetching results from Tavily:",e),e.response&&(console.error("Response status:",e.response.status),console.error("Response data:",e.response.data)),new Error(`Failed to fetch results from Tavily: ${e.message}`)}}};var ke=class extends _.Plugin{async onload(){await this.loadSettings(),await this.loadParticlesJS(),this.youtubeProvider=new _e(this),this.tavilyProvider=new He(this.settings.tavilyApiKey,this),this.addSettingTab(new Ee(this.app,this)),this.registerView(ae,e=>new Pe(e,this)),this.addRibbonIcon("brain","Mesh AI Integration",()=>{this.activateView()})}async loadParticlesJS(){return new Promise(e=>{let s=document.createElement("script");s.src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js",s.onload=()=>e(),document.head.appendChild(s)})}async loadSettings(){this.settings=Object.assign({},it,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async activateView(){let{workspace:e}=this.app;e.detachLeavesOfType(ae);let s=e.getLeavesOfType(ae)[0];if(!s){let r=e.getRightLeaf(!1);if(r)await r.setViewState({type:ae,active:!0}),s=r;else{console.error("Failed to create a new leaf for Mesh AI view");return}}e.revealLeaf(s)}async loadAllPatterns(){let e=await this.loadCustomPatterns(),s=await this.loadFabricPatterns();return[...new Set([...e,...s])].sort()}async loadCustomPatterns(){let e=this.app.vault.getAbstractFileByPath(this.settings.customPatternsFolder),s=[];if(e instanceof _.TFolder)for(let r of e.children)r instanceof _.TFile&&r.extension==="md"&&s.push(r.basename);return s.sort()}async loadFabricPatterns(){let e=this.app.vault.getAbstractFileByPath(this.settings.fabricPatternsFolder),s=[];if(e instanceof _.TFolder)for(let r of e.children)r instanceof _.TFile&&r.extension==="md"&&s.push(r.basename);return s.sort()}async downloadPatternsFromGitHub(){let e="https://api.github.com/repos/danielmiessler/fabric/contents/patterns",s="https://raw.githubusercontent.com/danielmiessler/fabric/main/patterns";try{this.app.vault.getAbstractFileByPath(this.settings.fabricPatternsFolder)instanceof _.TFolder||await this.app.vault.createFolder(this.settings.fabricPatternsFolder);let o=(await(0,_.requestUrl)({url:e})).json.filter(b=>b.type==="dir"),a=0,u=0;for(let b of o)try{let T=`${b.name}.md`,$=`${s}/${b.name}/system.md`,S=`${this.settings.fabricPatternsFolder}/${T}`,B=await(0,_.requestUrl)({url:$}),V=this.app.vault.getAbstractFileByPath(S);V instanceof _.TFile?(await this.app.vault.modify(V,B.text),console.log(`Updated existing file: ${T}`)):(await this.app.vault.create(S,B.text),console.log(`Created new file: ${T}`)),a++}catch(T){console.error(`Error processing ${b.name}:`,T),T instanceof Error&&(console.error(`Error message: ${T.message}`),console.error(`Error stack: ${T.stack}`)),u++}new _.Notice(`Successfully downloaded/updated ${a} patterns. ${u} failed.`),await this.loadAllPatterns()}catch(r){console.error("Error in downloadPatternsFromGitHub:",r),new _.Notice(`Failed to download patterns: ${r.message}`)}}async clearFabricPatternsFolder(){let e=this.app.vault.getAbstractFileByPath(this.settings.fabricPatternsFolder);if(e instanceof _.TFolder)for(let s of e.children)s instanceof _.TFile&&await this.app.vault.delete(s);else await this.app.vault.createFolder(this.settings.fabricPatternsFolder)}getProvider(e){switch(e){case"openai":return new Me(this.settings.openaiApiKey,this);case"google":return new xe(this.settings.googleApiKey,this);case"microsoft":return new Ae(this.settings.microsoftApiKey,this);case"anthropic":return new Se(this.settings.anthropicApiKey,this);case"grocq":return new Te(this.settings.grocqApiKey,this);case"ollama":return new Ce(this.settings.ollamaServerUrl,this);default:throw new Error(`Unknown provider: ${e}`)}}};
